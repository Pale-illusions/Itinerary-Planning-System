---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 苍镜月.
--- DateTime: 2024/11/1 22:07
---

local hashKey = 'snowflake_work_id_key'
local dataCenterIdKey = 'dataCenterId'
local workerIdKey = 'workerId'

-- 如果hashKey不存在, 则初始化并赋值 数据中心id 和 工作机器id 为 0
if (redis.call('exists', hashKey) == 0) then
    redis.call('hincrby', hashKey, dataCenterIdKey, 0)
    redis.call('hincrby', hashKey, workerIdKey, 0)
    return { 0, 0 }
end

-- 获取上一次的 数据中心id 和 工作机器id，转换为数字类型
local dataCenterId = tonumber(redis.call('hget', hashKey, dataCenterIdKey))
local workerId = tonumber(redis.call('hget', hashKey, workerIdKey))

-- 定义循环最大值，初始化结果
local max = 31
local resultDataCenterId = 0
local resultWorkerId = 0

-- 循环达到最大值，重新赋值id
if (dataCenterId == max and workerId == max) then
    redis.call('hset', hashKey, dataCenterId, '0')
    redis.call('hset', hashKey, workerId, '0')
-- workerId 未达到循环最大值，自增 workerId
elseif (workerId ~= max) then
    resultWorkerId = redis.call('hincrby', hashKey, workerIdKey, 1)
    resultDataCenterId = dataCenterId
-- workerId 达到循环最大值，dataCenterId 未达到循环最大值，自增 dataCenterId
elseif (dataCenterId ~= max) then
    resultWorkerId = 0
    resultDataCenterId = redis.call('hincrby', hashKey, dataCenterIdKey, 1)
    redis.call('hset', hashKey, workerIdKey, '0')
end

-- 返回结果
return { resultWorkerId, resultDataCenterId }



